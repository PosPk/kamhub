'use client';

import React, { useState } from 'react';
import { useRouter } from 'next/navigation';

const ROLES = [
  { id: 'operator', name: '–¢—É—Ä—ã', icon: 'üé£', description: '–†—ã–±–æ–ª–æ–≤–Ω—ã–µ —Ç—É—Ä—ã' },
  { id: 'transfer', name: '–¢—Ä–∞–Ω—Å—Ñ–µ—Ä', icon: 'üöó', description: '–î–æ—Å—Ç–∞–≤–∫–∞ –∫ –º–µ—Å—Ç–∞–º —Ä—ã–±–∞–ª–∫–∏' },
  { id: 'stay', name: '–†–∞–∑–º–µ—â–µ–Ω–∏–µ', icon: 'üè†', description: '–ë–∞–∑—ã –∏ –¥–æ–º–∏–∫–∏' },
  { id: 'gear', name: '–ê—Ä–µ–Ω–¥–∞ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è', icon: 'üé£', description: '–£–¥–æ—á–∫–∏, –ª–æ–¥–∫–∏, —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∞' },
];

export default function AuthPage() {
  const router = useRouter();
  const [mode, setMode] = useState<'login' | 'register'>('register');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  const [success, setSuccess] = useState(false);

  // Login form
  const [loginData, setLoginData] = useState({
    email: '',
    password: '',
  });

  // Register form
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    description: '',
    address: '',
    website: '',
    roles: [] as string[],
    logoUrl: '',
  });

  const [logoFile, setLogoFile] = useState<File | null>(null);
  const [logoPreview, setLogoPreview] = useState('');

  const handleRoleToggle = (roleId: string) => {
    setFormData(prev => ({
      ...prev,
      roles: prev.roles.includes(roleId)
        ? prev.roles.filter(r => r !== roleId)
        : [...prev.roles, roleId]
    }));
  };

  const handleLogoChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0];
    if (file) {
      if (file.size > 5 * 1024 * 1024) {
        setError('–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 5 –ú–ë');
        return;
      }
      
      setLogoFile(file);
      const reader = new FileReader();
      reader.onloadend = () => {
        setLogoPreview(reader.result as string);
      };
      reader.readAsDataURL(file);
    }
  };

  const handleLogin = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setError('');

    try {
      // –í—Ä–µ–º–µ–Ω–Ω–æ: –¥–µ–º–æ-–≤—Ö–æ–¥
      if (loginData.email && loginData.password) {
        router.push('/partner/dashboard');
      } else {
        throw new Error('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
      }
    } catch (err) {
      setError(err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞');
    } finally {
      setLoading(false);
    }
  };

  const handleRegister = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setError('');

    try {
      if (formData.roles.length === 0) {
        throw new Error('–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏');
      }

      const submitData = {
        ...formData,
        logoUrl: logoPreview || '',
      };

      const response = await fetch('/api/partners/register', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(submitData),
      });

      const data = await response.json();

      if (!data.success) {
        throw new Error(data.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
      }

      setSuccess(true);
      
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
      setTimeout(() => {
        router.push('/partner/dashboard');
      }, 2000);

    } catch (err) {
      setError(err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
    } finally {
      setLoading(false);
    }
  };

  if (success) {
    return (
      <div className="min-h-screen bg-premium-black flex items-center justify-center p-6">
        <div className="max-w-md w-full bg-white/5 border border-premium-gold rounded-2xl p-8 text-center">
          <div className="text-6xl mb-4">‚úÖ</div>
          <h1 className="text-3xl font-bold text-premium-gold mb-2">–£—Å–ø–µ—à–Ω–æ!</h1>
          <p className="text-white/70 mb-4">
            –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
          </p>
          <div className="text-sm text-white/50">
            –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç...
          </div>
        </div>
      </div>
    );
  }

  return (
    <main className="min-h-screen bg-premium-black text-white">
      <div className="max-w-6xl mx-auto p-6">
        {/* Header */}
        <div className="text-center mb-8">
          <div className="w-20 h-20 rounded-2xl bg-gold-gradient mx-auto mb-4"></div>
          <h1 className="text-4xl font-bold text-premium-gold mb-2">
            Kamchatour Hub
          </h1>
          <p className="text-white/70">
            –≠–∫–æ—Å–∏—Å—Ç–µ–º–∞ —Ç—É—Ä–∏–∑–º–∞ –ö–∞–º—á–∞—Ç–∫–∏
          </p>
        </div>

        {/* Mode Toggle */}
        <div className="max-w-md mx-auto mb-8">
          <div className="bg-white/5 border border-white/10 rounded-xl p-1 flex gap-1">
            <button
              onClick={() => setMode('login')}
              className={`flex-1 py-3 rounded-lg font-bold transition-colors ${
                mode === 'login'
                  ? 'bg-premium-gold text-premium-black'
                  : 'text-white/70 hover:text-white'
              }`}
            >
              –í—Ö–æ–¥
            </button>
            <button
              onClick={() => setMode('register')}
              className={`flex-1 py-3 rounded-lg font-bold transition-colors ${
                mode === 'register'
                  ? 'bg-premium-gold text-premium-black'
                  : 'text-white/70 hover:text-white'
              }`}
            >
              –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞
            </button>
          </div>
        </div>

        {/* Error Message */}
        {error && (
          <div className="max-w-4xl mx-auto mb-6 p-4 bg-red-500/10 border border-red-500/30 rounded-xl text-red-400">
            ‚ùå {error}
          </div>
        )}

        {/* LOGIN FORM */}
        {mode === 'login' && (
          <div className="max-w-md mx-auto">
            <form onSubmit={handleLogin} className="bg-white/5 border border-white/10 rounded-2xl p-6 space-y-4">
              <div>
                <label className="block text-sm font-medium mb-2">Email</label>
                <input
                  type="email"
                  required
                  value={loginData.email}
                  onChange={(e) => setLoginData({ ...loginData, email: e.target.value })}
                  className="w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl focus:outline-none focus:ring-2 focus:ring-premium-gold text-white"
                  placeholder="info@kamchatka-fishing.ru"
                />
              </div>

              <div>
                <label className="block text-sm font-medium mb-2">–ü–∞—Ä–æ–ª—å</label>
                <input
                  type="password"
                  required
                  value={loginData.password}
                  onChange={(e) => setLoginData({ ...loginData, password: e.target.value })}
                  className="w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl focus:outline-none focus:ring-2 focus:ring-premium-gold text-white"
                  placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                />
              </div>

              <button
                type="submit"
                disabled={loading}
                className="w-full py-3 bg-premium-gold text-premium-black font-bold rounded-xl hover:bg-premium-gold/90 disabled:opacity-50 transition-colors"
              >
                {loading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
              </button>
            </form>

            <div className="text-center mt-6">
              <a href="/demo" className="text-blue-400 hover:text-blue-300 text-sm">
                üöÄ –î–µ–º–æ-—Ä–µ–∂–∏–º (–±–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏)
              </a>
            </div>
          </div>
        )}

        {/* REGISTER FORM */}
        {mode === 'register' && (
          <form onSubmit={handleRegister} className="max-w-4xl mx-auto space-y-6">
            {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <div className="bg-white/5 border border-white/10 rounded-2xl p-6">
              <h2 className="text-2xl font-bold mb-6 text-premium-gold">üìã –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
              
              <div className="grid gap-4">
                <div>
                  <label className="block text-sm font-medium mb-2">
                    –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ <span className="text-red-400">*</span>
                  </label>
                  <input
                    type="text"
                    required
                    value={formData.name}
                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}
                    className="w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl focus:outline-none focus:ring-2 focus:ring-premium-gold text-white"
                    placeholder="–ö–∞–º—á–∞—Ç—Å–∫–∞—è —Ä—ã–±–∞–ª–∫–∞"
                  />
                </div>

                <div className="grid md:grid-cols-2 gap-4">
                  <div>
                    <label className="block text-sm font-medium mb-2">
                      Email <span className="text-red-400">*</span>
                    </label>
                    <input
                      type="email"
                      required
                      value={formData.email}
                      onChange={(e) => setFormData({ ...formData, email: e.target.value })}
                      className="w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl focus:outline-none focus:ring-2 focus:ring-premium-gold text-white"
                      placeholder="info@kamchatka-fishing.ru"
                    />
                  </div>

                  <div>
                    <label className="block text-sm font-medium mb-2">
                      –¢–µ–ª–µ—Ñ–æ–Ω <span className="text-red-400">*</span>
                    </label>
                    <input
                      type="tel"
                      required
                      value={formData.phone}
                      onChange={(e) => setFormData({ ...formData, phone: e.target.value })}
                      className="w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl focus:outline-none focus:ring-2 focus:ring-premium-gold text-white"
                      placeholder="+7 (999) 123-45-67"
                    />
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">
                    –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏
                  </label>
                  <textarea
                    value={formData.description}
                    onChange={(e) => setFormData({ ...formData, description: e.target.value })}
                    rows={4}
                    className="w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl focus:outline-none focus:ring-2 focus:ring-premium-gold resize-none text-white"
                    placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏, –æ–ø—ã—Ç–µ —Ä–∞–±–æ—Ç—ã, –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞—Ö..."
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">
                    –ê–¥—Ä–µ—Å
                  </label>
                  <input
                    type="text"
                    value={formData.address}
                    onChange={(e) => setFormData({ ...formData, address: e.target.value })}
                    className="w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl focus:outline-none focus:ring-2 focus:ring-premium-gold text-white"
                    placeholder="–≥. –ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫-–ö–∞–º—á–∞—Ç—Å–∫–∏–π, —É–ª. –õ–µ–Ω–∏–Ω—Å–∫–∞—è, 1"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">
                    –í–µ–±-—Å–∞–π—Ç
                  </label>
                  <input
                    type="url"
                    value={formData.website}
                    onChange={(e) => setFormData({ ...formData, website: e.target.value })}
                    className="w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl focus:outline-none focus:ring-2 focus:ring-premium-gold text-white"
                    placeholder="https://kamchatka-fishing.ru"
                  />
                </div>
              </div>
            </div>

            {/* –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ */}
            <div className="bg-white/5 border border-white/10 rounded-2xl p-6">
              <h2 className="text-2xl font-bold mb-2 text-premium-gold">
                üéØ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ <span className="text-red-400">*</span>
              </h2>
              <p className="text-sm text-white/70 mb-6">
                –í—ã–±–µ—Ä–∏—Ç–µ –≤—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ)
              </p>

              <div className="grid md:grid-cols-2 gap-4">
                {ROLES.map((role) => (
                  <button
                    key={role.id}
                    type="button"
                    onClick={() => handleRoleToggle(role.id)}
                    className={`p-6 rounded-xl border-2 transition-all text-left ${
                      formData.roles.includes(role.id)
                        ? 'border-premium-gold bg-premium-gold/10 shadow-lg shadow-premium-gold/20'
                        : 'border-white/10 bg-white/5 hover:border-white/20'
                    }`}
                  >
                    <div className="flex items-center gap-3 mb-2">
                      <span className="text-3xl">{role.icon}</span>
                      <span className="text-xl font-bold">{role.name}</span>
                    </div>
                    <p className="text-sm text-white/70">{role.description}</p>
                    
                    {formData.roles.includes(role.id) && (
                      <div className="mt-3 text-premium-gold font-bold text-sm">
                        ‚úì –í—ã–±—Ä–∞–Ω–æ
                      </div>
                    )}
                  </button>
                ))}
              </div>

              {formData.roles.length === 0 && (
                <p className="text-red-400 text-sm mt-4">
                  ‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
                </p>
              )}

              {formData.roles.length > 0 && (
                <div className="mt-4 p-4 bg-green-500/10 border border-green-500/30 rounded-xl">
                  <p className="text-green-400 text-sm">
                    ‚úì –í—ã–±—Ä–∞–Ω–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π: <strong>{formData.roles.length}</strong>
                  </p>
                </div>
              )}
            </div>

            {/* –õ–æ–≥–æ—Ç–∏–ø */}
            <div className="bg-white/5 border border-white/10 rounded-2xl p-6">
              <h2 className="text-2xl font-bold mb-6 text-premium-gold">üì∏ –õ–æ–≥–æ—Ç–∏–ø –∫–æ–º–ø–∞–Ω–∏–∏</h2>

              <div className="flex flex-col md:flex-row items-center gap-6">
                {logoPreview ? (
                  <div className="w-40 h-40 rounded-xl border-2 border-premium-gold overflow-hidden flex-shrink-0 shadow-lg shadow-premium-gold/20">
                    <img src={logoPreview} alt="Logo preview" className="w-full h-full object-cover" />
                  </div>
                ) : (
                  <div className="w-40 h-40 rounded-xl border-2 border-dashed border-white/20 flex items-center justify-center bg-white/5 flex-shrink-0">
                    <div className="text-center">
                      <span className="text-5xl">üì∑</span>
                      <p className="text-xs text-white/50 mt-2">–ù–µ—Ç –ª–æ–≥–æ—Ç–∏–ø–∞</p>
                    </div>
                  </div>
                )}

                <div className="flex-1 w-full">
                  <label className="block">
                    <span className="px-6 py-3 bg-premium-gold text-premium-black font-bold rounded-xl cursor-pointer hover:bg-premium-gold/90 transition-colors inline-block">
                      üìÅ –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª
                    </span>
                    <input
                      type="file"
                      accept="image/*"
                      onChange={handleLogoChange}
                      className="hidden"
                    />
                  </label>
                  <div className="mt-4 text-sm text-white/70 space-y-1">
                    <p>‚úì –§–æ—Ä–º–∞—Ç—ã: PNG, JPG, WEBP</p>
                    <p>‚úì –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 5 –ú–ë</p>
                    <p>‚úì –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ä–∞–∑–º–µ—Ä: 512x512px</p>
                  </div>
                  
                  {logoFile && (
                    <div className="mt-3 p-3 bg-green-500/10 border border-green-500/30 rounded-lg">
                      <p className="text-green-400 text-sm">
                        ‚úì –ó–∞–≥—Ä—É–∂–µ–Ω: {logoFile.name} ({(logoFile.size / 1024).toFixed(1)} –ö–ë)
                      </p>
                    </div>
                  )}
                </div>
              </div>
            </div>

            {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
            <div className="sticky bottom-6 bg-premium-black/80 backdrop-blur border border-white/10 rounded-2xl p-4">
              <div className="flex gap-4">
                <button
                  type="button"
                  onClick={() => router.push('/')}
                  className="flex-1 px-6 py-4 bg-white/5 border border-white/10 text-white rounded-xl hover:bg-white/10 transition-colors font-bold"
                >
                  –û—Ç–º–µ–Ω–∞
                </button>
                <button
                  type="submit"
                  disabled={loading || formData.roles.length === 0}
                  className="flex-1 px-6 py-4 bg-premium-gold text-premium-black rounded-xl hover:bg-premium-gold/90 disabled:opacity-50 disabled:cursor-not-allowed transition-colors font-bold text-lg shadow-lg shadow-premium-gold/20"
                >
                  {loading ? '‚è≥ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...' : '‚úì –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'}
                </button>
              </div>
              
              {formData.roles.length === 0 && (
                <p className="text-red-400 text-xs text-center mt-2">
                  –í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
                </p>
              )}
            </div>
          </form>
        )}

        {/* Footer */}
        <div className="text-center mt-12 text-white/50 text-sm">
          <p>üèîÔ∏è Kamchatour Hub ‚Äî —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞ —Ç—É—Ä–∏–∑–º–∞ –ö–∞–º—á–∞—Ç–∫–∏</p>
        </div>
      </div>
    </main>
  );
}
