'use client';

import React, { useState, useEffect } from 'react';
import { Weather } from '@/types';

export default function GuideDashboard() {
  const [weather, setWeather] = useState<Weather | null>(null);
  const [loading, setLoading] = useState(true);
  const [selectedTab, setSelectedTab] = useState('schedule');

  useEffect(() => {
    fetchWeather();
  }, []);

  const fetchWeather = async () => {
    try {
      const response = await fetch('/api/weather?lat=53.0375&lng=158.6556&location=–ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫-–ö–∞–º—á–∞—Ç—Å–∫–∏–π');
      const data = await response.json();
      if (data.success) {
        setWeather(data.data);
      }
    } catch (error) {
      console.error('Error fetching weather:', error);
    } finally {
      setLoading(false);
    }
  };

  const tabs = [
    { id: 'schedule', name: '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', icon: 'üìÖ' },
    { id: 'groups', name: '–ì—Ä—É–ø–ø—ã', icon: 'üë•' },
    { id: 'earnings', name: '–î–æ—Ö–æ–¥—ã', icon: 'üí∞' },
    { id: 'weather', name: '–ü–æ–≥–æ–¥–∞', icon: 'üå§Ô∏è' },
    { id: 'profile', name: '–ü—Ä–æ—Ñ–∏–ª—å', icon: 'üë§' },
  ];

  const mockSchedule = [
    {
      id: '1',
      date: '2024-01-15',
      time: '07:00',
      tour: '–í–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –Ω–∞ –ê–≤–∞—á–∏–Ω—Å–∫–∏–π –≤—É–ª–∫–∞–Ω',
      group: '–ì—Ä—É–ø–ø–∞ 1',
      participants: 8,
      status: 'confirmed',
      meetingPoint: '–ü–ª–æ—â–∞–¥—å –õ–µ–Ω–∏–Ω–∞',
    },
    {
      id: '2',
      date: '2024-01-16',
      time: '09:00',
      tour: '–î–æ–ª–∏–Ω–∞ –≥–µ–π–∑–µ—Ä–æ–≤',
      group: '–ì—Ä—É–ø–ø–∞ 2',
      participants: 12,
      status: 'confirmed',
      meetingPoint: '–ê—ç—Ä–æ–ø–æ—Ä—Ç –ï–ª–∏–∑–æ–≤–æ',
    },
    {
      id: '3',
      date: '2024-01-17',
      time: '06:00',
      tour: '–ú–µ–¥–≤–µ–∂—å–µ —Å–∞—Ñ–∞—Ä–∏',
      group: '–ì—Ä—É–ø–ø–∞ 3',
      participants: 6,
      status: 'pending',
      meetingPoint: '–ü—Ä–∏—á–∞–ª –≤ –±—É—Ö—Ç–µ –†—É—Å—Å–∫–∞—è',
    },
  ];

  const mockGroups = [
    {
      id: '1',
      tour: '–í–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –Ω–∞ –ê–≤–∞—á–∏–Ω—Å–∫–∏–π –≤—É–ª–∫–∞–Ω',
      date: '2024-01-15',
      participants: [
        { name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', phone: '+7 (999) 123-45-67', experience: '–ù–æ–≤–∏—á–æ–∫' },
        { name: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞', phone: '+7 (999) 234-56-78', experience: '–û–ø—ã—Ç–Ω—ã–π' },
        { name: '–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤', phone: '+7 (999) 345-67-89', experience: '–ù–æ–≤–∏—á–æ–∫' },
        { name: '–ï–ª–µ–Ω–∞ –í–∞—Å–Ω–µ—Ü–æ–≤–∞', phone: '+7 (999) 456-78-90', experience: '–û–ø—ã—Ç–Ω—ã–π' },
      ],
      specialRequirements: ['–ê–ª–ª–µ—Ä–≥–∏—è –Ω–∞ –ø—ã–ª—å—Ü—É', '–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–æ–µ –ø–∏—Ç–∞–Ω–∏–µ'],
      emergencyContact: '+7 (4152) 123-456',
    },
  ];

  const mockEarnings = {
    thisMonth: 125000,
    lastMonth: 98000,
    thisYear: 1450000,
    totalTours: 45,
    averagePerTour: 2778,
    nextPayout: '2024-01-20',
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-premium-black flex items-center justify-center">
        <div className="text-center">
          <div className="w-16 h-16 border-4 border-premium-gold border-t-transparent rounded-full animate-spin mx-auto mb-4"></div>
          <p className="text-white text-lg">–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-premium-black">
      {/* Header */}
      <div className="bg-gradient-to-r from-premium-black to-premium-gold/10 border-b border-premium-gold/20">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
          <div className="flex items-center justify-between">
            <div>
              <h1 className="text-3xl font-bold text-white">–ü–∞–Ω–µ–ª—å –≥–∏–¥–∞</h1>
              <p className="text-white/70 mt-1">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –∏ –≥—Ä—É–ø–ø–∞–º–∏</p>
            </div>
            <div className="flex items-center space-x-4">
              <div className="text-right">
                <div className="text-white text-sm">–†–µ–π—Ç–∏–Ω–≥ –≥–∏–¥–∞</div>
                <div className="text-premium-gold text-lg font-bold">4.9 ‚≠ê</div>
              </div>
              {weather && (
                <div className="text-right">
                  <div className="flex items-center space-x-2">
                    <span className="text-2xl">üå§Ô∏è</span>
                    <span className="text-white text-lg font-bold">{weather.temperature}¬∞C</span>
                  </div>
                  <p className="text-white/70 text-sm">{weather.location}</p>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>

      {/* Tabs */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
        <div className="flex space-x-1 bg-white/5 rounded-xl p-1 mb-8">
          {tabs.map((tab) => (
            <button
              key={tab.id}
              onClick={() => setSelectedTab(tab.id)}
              className={`flex-1 flex items-center justify-center space-x-2 py-3 px-4 rounded-lg transition-colors ${
                selectedTab === tab.id
                  ? 'bg-premium-gold text-premium-black'
                  : 'text-white/70 hover:text-white hover:bg-white/10'
              }`}
            >
              <span className="text-lg">{tab.icon}</span>
              <span className="font-medium">{tab.name}</span>
            </button>
          ))}
        </div>

        {/* Schedule Tab */}
        {selectedTab === 'schedule' && (
          <div className="space-y-6">
            <div className="flex items-center justify-between">
              <h3 className="text-2xl font-bold text-white">–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç—É—Ä–æ–≤</h3>
              <button className="px-6 py-3 bg-premium-gold text-premium-black rounded-xl hover:bg-premium-gold/90 transition-colors font-bold">
                + –î–æ–±–∞–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
              </button>
            </div>

            <div className="space-y-4">
              {mockSchedule.map((item) => (
                <div key={item.id} className="bg-white/5 rounded-2xl p-6 border border-white/10">
                  <div className="flex items-start justify-between mb-4">
                    <div className="flex-1">
                      <h4 className="text-xl font-bold text-white">{item.tour}</h4>
                      <p className="text-white/70">{item.group} ‚Ä¢ {item.participants} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</p>
                    </div>
                    <span className={`px-3 py-1 rounded-full text-xs font-bold ${
                      item.status === 'confirmed' 
                        ? 'bg-green-500/20 text-green-400' 
                        : 'bg-yellow-500/20 text-yellow-400'
                    }`}>
                      {item.status === 'confirmed' ? '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ' : '–û–∂–∏–¥–∞–µ—Ç'}
                    </span>
                  </div>
                  
                  <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4">
                    <div>
                      <p className="text-white/70 text-sm">–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è</p>
                      <p className="text-white font-bold">{item.date} –≤ {item.time}</p>
                    </div>
                    <div>
                      <p className="text-white/70 text-sm">–ú–µ—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∏</p>
                      <p className="text-white">{item.meetingPoint}</p>
                    </div>
                    <div>
                      <p className="text-white/70 text-sm">–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤</p>
                      <p className="text-white">{item.participants} —á–µ–ª–æ–≤–µ–∫</p>
                    </div>
                  </div>
                  
                  <div className="flex space-x-3">
                    <button className="px-4 py-2 bg-white/10 text-white rounded-lg hover:bg-white/20 transition-colors text-sm">
                      –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏
                    </button>
                    <button className="px-4 py-2 bg-premium-gold text-premium-black rounded-lg hover:bg-premium-gold/90 transition-colors text-sm font-bold">
                      –ì—Ä—É–ø–ø–∞
                    </button>
                    <button className="px-4 py-2 bg-red-500/20 text-red-400 rounded-lg hover:bg-red-500/30 transition-colors text-sm">
                      –û—Ç–º–µ–Ω–∏—Ç—å
                    </button>
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* Groups Tab */}
        {selectedTab === 'groups' && (
          <div className="space-y-6">
            <h3 className="text-2xl font-bold text-white">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø–∞–º–∏</h3>
            
            {mockGroups.map((group) => (
              <div key={group.id} className="bg-white/5 rounded-2xl p-6 border border-white/10">
                <div className="flex items-start justify-between mb-6">
                  <div>
                    <h4 className="text-xl font-bold text-white">{group.tour}</h4>
                    <p className="text-white/70">{group.date} ‚Ä¢ {group.participants.length} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</p>
                  </div>
                  <button className="px-4 py-2 bg-premium-gold text-premium-black rounded-lg hover:bg-premium-gold/90 transition-colors text-sm font-bold">
                    –°–≤—è–∑–∞—Ç—å—Å—è —Å –≥—Ä—É–ø–ø–æ–π
                  </button>
                </div>
                
                <div className="space-y-4">
                  <div>
                    <h5 className="text-lg font-bold text-white mb-3">–£—á–∞—Å—Ç–Ω–∏–∫–∏ –≥—Ä—É–ø–ø—ã</h5>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      {group.participants.map((participant, index) => (
                        <div key={index} className="bg-white/5 rounded-xl p-4">
                          <div className="flex items-center justify-between mb-2">
                            <h6 className="text-white font-bold">{participant.name}</h6>
                            <span className={`px-2 py-1 rounded-full text-xs ${
                              participant.experience === '–û–ø—ã—Ç–Ω—ã–π' 
                                ? 'bg-green-500/20 text-green-400' 
                                : 'bg-blue-500/20 text-blue-400'
                            }`}>
                              {participant.experience}
                            </span>
                          </div>
                          <p className="text-white/70 text-sm">{participant.phone}</p>
                        </div>
                      ))}
                    </div>
                  </div>
                  
                  {group.specialRequirements.length > 0 && (
                    <div>
                      <h5 className="text-lg font-bold text-white mb-3">–û—Å–æ–±—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è</h5>
                      <div className="space-y-2">
                        {group.specialRequirements.map((req, index) => (
                          <div key={index} className="bg-yellow-500/10 border border-yellow-500/20 rounded-lg p-3">
                            <p className="text-yellow-400 text-sm">‚ö†Ô∏è {req}</p>
                          </div>
                        ))}
                      </div>
                    </div>
                  )}
                  
                  <div>
                    <h5 className="text-lg font-bold text-white mb-3">–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã</h5>
                    <div className="bg-red-500/10 border border-red-500/20 rounded-lg p-3">
                      <p className="text-red-400 text-sm">üö® {group.emergencyContact}</p>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        )}

        {/* Earnings Tab */}
        {selectedTab === 'earnings' && (
          <div className="space-y-6">
            <h3 className="text-2xl font-bold text-white">–î–æ—Ö–æ–¥—ã –∏ –≤—ã–ø–ª–∞—Ç—ã</h3>
            
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              <div className="bg-white/5 rounded-2xl p-6 border border-white/10">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-white/70 text-sm">–≠—Ç–æ—Ç –º–µ—Å—è—Ü</p>
                    <p className="text-3xl font-bold text-white">{mockEarnings.thisMonth.toLocaleString()}‚ÇΩ</p>
                  </div>
                  <div className="text-3xl">üí∞</div>
                </div>
              </div>
              
              <div className="bg-white/5 rounded-2xl p-6 border border-white/10">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-white/70 text-sm">–ü—Ä–æ—à–ª—ã–π –º–µ—Å—è—Ü</p>
                    <p className="text-3xl font-bold text-white">{mockEarnings.lastMonth.toLocaleString()}‚ÇΩ</p>
                  </div>
                  <div className="text-3xl">üìä</div>
                </div>
              </div>
              
              <div className="bg-white/5 rounded-2xl p-6 border border-white/10">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-white/70 text-sm">–≠—Ç–æ—Ç –≥–æ–¥</p>
                    <p className="text-3xl font-bold text-white">{mockEarnings.thisYear.toLocaleString()}‚ÇΩ</p>
                  </div>
                  <div className="text-3xl">üìà</div>
                </div>
              </div>
              
              <div className="bg-white/5 rounded-2xl p-6 border border-white/10">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-white/70 text-sm">–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</p>
                    <p className="text-3xl font-bold text-white">{mockEarnings.averagePerTour.toLocaleString()}‚ÇΩ</p>
                  </div>
                  <div className="text-3xl">‚ö°</div>
                </div>
              </div>
            </div>
            
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              <div className="bg-white/5 rounded-2xl p-6 border border-white/10">
                <h4 className="text-lg font-bold text-white mb-4">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—É—Ä–æ–≤</h4>
                <div className="space-y-3">
                  <div className="flex items-center justify-between">
                    <span className="text-white/70">–í—Å–µ–≥–æ —Ç—É—Ä–æ–≤</span>
                    <span className="text-white font-bold">{mockEarnings.totalTours}</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-white/70">–°–ª–µ–¥—É—é—â–∞—è –≤—ã–ø–ª–∞—Ç–∞</span>
                    <span className="text-premium-gold font-bold">{mockEarnings.nextPayout}</span>
                  </div>
                </div>
              </div>
              
              <div className="bg-white/5 rounded-2xl p-6 border border-white/10">
                <h4 className="text-lg font-bold text-white mb-4">–î–æ—Ö–æ–¥—ã –ø–æ –º–µ—Å—è—Ü–∞–º</h4>
                <div className="space-y-3">
                  {['–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å'].map((month, index) => (
                    <div key={month} className="flex items-center justify-between">
                      <span className="text-white/70">{month}</span>
                      <div className="flex items-center space-x-3">
                        <div className="w-24 bg-white/10 rounded-full h-2">
                          <div 
                            className="bg-premium-gold h-2 rounded-full" 
                            style={{ width: `${Math.random() * 100}%` }}
                          ></div>
                        </div>
                        <span className="text-premium-gold font-bold w-20 text-right">
                          {Math.floor(Math.random() * 50000 + 20000).toLocaleString()}‚ÇΩ
                        </span>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Weather Tab */}
        {selectedTab === 'weather' && weather && (
          <div className="space-y-6">
            <h3 className="text-2xl font-bold text-white">–ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è</h3>
            
            <div className="bg-white/5 rounded-2xl p-6 border border-white/10">
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                <div className="text-center">
                  <div className="text-4xl mb-2">üå§Ô∏è</div>
                  <div className="text-3xl font-bold text-white">{weather.temperature}¬∞C</div>
                  <div className="text-white/70 capitalize">{weather.condition}</div>
                </div>
                
                <div className="text-center">
                  <div className="text-2xl mb-2">üí®</div>
                  <div className="text-xl font-bold text-white">{weather.windSpeed} –∫–º/—á</div>
                  <div className="text-white/70">–í–µ—Ç–µ—Ä</div>
                </div>
                
                <div className="text-center">
                  <div className="text-2xl mb-2">üíß</div>
                  <div className="text-xl font-bold text-white">{weather.humidity}%</div>
                  <div className="text-white/70">–í–ª–∞–∂–Ω–æ—Å—Ç—å</div>
                </div>
                
                <div className="text-center">
                  <div className="text-2xl mb-2">üëÅÔ∏è</div>
                  <div className="text-xl font-bold text-white">{weather.visibility} –∫–º</div>
                  <div className="text-white/70">–í–∏–¥–∏–º–æ—Å—Ç—å</div>
                </div>
              </div>
              
              <div className="border-t border-white/10 pt-6">
                <div className="flex items-center justify-between mb-4">
                  <h4 className="text-lg font-bold text-white">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –≥–∏–¥–æ–≤</h4>
                  <span className={`text-lg font-bold ${
                    weather.safetyLevel === 'excellent' ? 'text-green-400' :
                    weather.safetyLevel === 'good' ? 'text-blue-400' :
                    weather.safetyLevel === 'difficult' ? 'text-yellow-400' : 'text-red-400'
                  }`}>
                    {weather.safetyLevel === 'excellent' && '–û—Ç–ª–∏—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è'}
                    {weather.safetyLevel === 'good' && '–•–æ—Ä–æ—à–∏–µ —É—Å–ª–æ–≤–∏—è'}
                    {weather.safetyLevel === 'difficult' && '–°–ª–æ–∂–Ω—ã–µ —É—Å–ª–æ–≤–∏—è'}
                    {weather.safetyLevel === 'dangerous' && '–û–ø–∞—Å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è'}
                  </span>
                </div>
                
                <div className="space-y-2">
                  {weather.recommendations?.map((rec, index) => (
                    <div key={index} className="text-white/70 text-sm">
                      {rec}
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Profile Tab */}
        {selectedTab === 'profile' && (
          <div className="space-y-6">
            <h3 className="text-2xl font-bold text-white">–ü—Ä–æ—Ñ–∏–ª—å –≥–∏–¥–∞</h3>
            
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              <div className="bg-white/5 rounded-2xl p-6 border border-white/10">
                <h4 className="text-lg font-bold text-white mb-4">–õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h4>
                <div className="space-y-4">
                  <div>
                    <label className="block text-white/70 text-sm mb-2">–ò–º—è</label>
                    <input
                      type="text"
                      defaultValue="–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –í—É–ª–∫–∞–Ω–æ–≤"
                      className="w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-premium-gold"
                    />
                  </div>
                  <div>
                    <label className="block text-white/70 text-sm mb-2">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                    <input
                      type="tel"
                      defaultValue="+7 (999) 123-45-67"
                      className="w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-premium-gold"
                    />
                  </div>
                  <div>
                    <label className="block text-white/70 text-sm mb-2">Email</label>
                    <input
                      type="email"
                      defaultValue="alex@guide.kamchatka.ru"
                      className="w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-premium-gold"
                    />
                  </div>
                </div>
              </div>
              
              <div className="bg-white/5 rounded-2xl p-6 border border-white/10">
                <h4 className="text-lg font-bold text-white mb-4">–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h4>
                <div className="space-y-4">
                  <div>
                    <label className="block text-white/70 text-sm mb-2">–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è</label>
                    <select className="w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-premium-gold">
                      <option>–ì–æ—Ä–Ω—ã–µ –ø–æ—Ö–æ–¥—ã</option>
                      <option>–≠–∫—Å–∫—É—Ä—Å–∏–∏</option>
                      <option>–î–∏–∫–∞—è –ø—Ä–∏—Ä–æ–¥–∞</option>
                      <option>–†—ã–±–∞–ª–∫–∞</option>
                    </select>
                  </div>
                  <div>
                    <label className="block text-white/70 text-sm mb-2">–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã</label>
                    <input
                      type="text"
                      defaultValue="5 –ª–µ—Ç"
                      className="w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-premium-gold"
                    />
                  </div>
                  <div>
                    <label className="block text-white/70 text-sm mb-2">–Ø–∑—ã–∫–∏</label>
                    <input
                      type="text"
                      defaultValue="–†—É—Å—Å–∫–∏–π, –ê–Ω–≥–ª–∏–π—Å–∫–∏–π"
                      className="w-full px-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-premium-gold"
                    />
                  </div>
                </div>
              </div>
            </div>
            
            <div className="flex justify-end">
              <button className="px-8 py-3 bg-premium-gold text-premium-black rounded-xl hover:bg-premium-gold/90 transition-colors font-bold">
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
              </button>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}