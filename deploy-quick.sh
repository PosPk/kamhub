#!/bin/bash

###############################################################################
# KAMCHATOUR HUB - –ë–´–°–¢–†–´–ô –î–ï–ü–õ–û–ô
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
###############################################################################

set -e  # Exit on error

echo "üöÄ KAMCHATOUR HUB - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π"
echo "=========================================="
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log_info() {
    echo -e "${GREEN}‚úì${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}‚ö†${NC} $1"
}

log_error() {
    echo -e "${RED}‚úó${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
if ! command -v node &> /dev/null; then
    log_error "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js 20+ —Å https://nodejs.org/"
    exit 1
fi

NODE_VERSION=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$NODE_VERSION" -lt 20 ]; then
    log_error "–¢—Ä–µ–±—É–µ—Ç—Å—è Node.js 20+, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å–∏—è $(node -v)"
    exit 1
fi
log_info "Node.js $(node -v) ‚úì"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ npm
if ! command -v npm &> /dev/null; then
    log_error "npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    exit 1
fi
log_info "npm $(npm -v) ‚úì"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL
echo ""
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL..."
if ! command -v psql &> /dev/null; then
    log_warn "PostgreSQL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PostgreSQL –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —É–¥–∞–ª–µ–Ω–Ω—É—é –ë–î"
else
    log_info "PostgreSQL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚úì"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
echo ""
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
if [ ! -f .env ]; then
    log_warn ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo "–°–æ–∑–¥–∞–µ–º –∏–∑ .env.example..."
    cp .env.example .env
    log_info ".env —Å–æ–∑–¥–∞–Ω –∏–∑ —à–∞–±–ª–æ–Ω–∞"
    log_warn "–í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!"
    echo ""
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è .env –∏–ª–∏ Ctrl+C –¥–ª—è –æ—Ç–º–µ–Ω—ã..."
else
    log_info ".env —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω ‚úì"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ DATABASE_URL
source .env 2>/dev/null || true
if [ -z "$DATABASE_URL" ] || [[ "$DATABASE_URL" == *"localhost"* ]]; then
    log_warn "DATABASE_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç localhost"
    echo ""
    echo "–í–≤–µ–¥–∏—Ç–µ DATABASE_URL –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è localhost:"
    read -p "DATABASE_URL: " DB_URL
    if [ ! -z "$DB_URL" ]; then
        # Update .env
        if grep -q "^DATABASE_URL=" .env; then
            sed -i "s|^DATABASE_URL=.*|DATABASE_URL=$DB_URL|" .env
        else
            echo "DATABASE_URL=$DB_URL" >> .env
        fi
        log_info "DATABASE_URL –æ–±–Ω–æ–≤–ª–µ–Ω"
    fi
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo ""
echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
if [ ! -d "node_modules" ]; then
    npm install
    log_info "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã ‚úì"
else
    log_info "node_modules —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É"
fi

# Build –ø—Ä–æ–µ–∫—Ç–∞
echo ""
echo "–°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
if npm run build; then
    log_info "–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω ‚úì"
else
    log_error "–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏!"
    exit 1
fi

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
echo ""
echo "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
read -p "–ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö? (y/n): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    if npm run migrate:up 2>/dev/null; then
        log_info "–ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã ‚úì"
    else
        log_warn "–û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π (–≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã)"
    fi
    
    # Seat holds —Ç–∞–±–ª–∏—Ü–∞
    if [ -f "lib/database/seat_holds_schema.sql" ]; then
        echo "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ seat_holds —Å—Ö–µ–º—ã..."
        if psql "$DATABASE_URL" -f lib/database/seat_holds_schema.sql 2>/dev/null; then
            log_info "seat_holds —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞ ‚úì"
        else
            log_warn "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è seat_holds (–≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)"
        fi
    fi
else
    log_warn "–ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–æ–ø—É—â–µ–Ω—ã"
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ backup
echo ""
read -p "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ backup? (y/n): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    if [ -f "scripts/setup-backup-cron.sh" ]; then
        chmod +x scripts/setup-backup-cron.sh
        bash scripts/setup-backup-cron.sh
        log_info "Backup –Ω–∞—Å—Ç—Ä–æ–µ–Ω ‚úì"
    else
        log_warn "–°–∫—Ä–∏–ø—Ç backup –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
else
    log_warn "Backup –ø—Ä–æ–ø—É—â–µ–Ω"
fi

# –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ –∑–∞–ø—É—Å–∫–∞
echo ""
echo "=========================================="
echo "–î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
echo ""
echo "1) –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ development —Ä–µ–∂–∏–º–µ (npm run dev)"
echo "2) –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ production —Ä–µ–∂–∏–º–µ (npm start)"
echo "3) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PM2 –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–∞–∫ —Å–µ—Ä–≤–∏—Å"
echo "4) –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è Vercel/Docker"
echo "5) –í—ã—Ö–æ–¥"
echo ""
read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-5): " choice

case $choice in
    1)
        log_info "–ó–∞–ø—É—Å–∫ –≤ development —Ä–µ–∂–∏–º–µ..."
        echo ""
        echo "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ http://localhost:3002"
        echo "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
        echo ""
        npm run dev
        ;;
    2)
        log_info "–ó–∞–ø—É—Å–∫ –≤ production —Ä–µ–∂–∏–º–µ..."
        echo ""
        echo "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ http://localhost:3000"
        echo "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
        echo ""
        npm start
        ;;
    3)
        log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2..."
        if ! command -v pm2 &> /dev/null; then
            npm install -g pm2
        fi
        pm2 start npm --name "kamchatour-hub" -- start
        pm2 save
        log_info "PM2 –∑–∞–ø—É—â–µ–Ω ‚úì"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
        echo "  pm2 status           - —Å—Ç–∞—Ç—É—Å"
        echo "  pm2 logs kamchatour-hub  - –ª–æ–≥–∏"
        echo "  pm2 restart kamchatour-hub  - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"
        echo "  pm2 stop kamchatour-hub     - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞"
        ;;
    4)
        cat << 'EOF'

========================================
üì¶ –î–ï–ü–õ–û–ô –ù–ê VERCEL
========================================

1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Vercel CLI:
   npm install -g vercel

2. Login:
   vercel login

3. Deploy:
   vercel --prod

4. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Vercel Dashboard:
   - DATABASE_URL (–∏–∑ Vercel Postgres)
   - JWT_SECRET
   - –î—Ä—É–≥–∏–µ –∏–∑ .env.example

========================================
üê≥ –î–ï–ü–õ–û–ô –ß–ï–†–ï–ó DOCKER
========================================

1. Build –æ–±—Ä–∞–∑:
   docker build -t kamchatour-hub .

2. –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å PostgreSQL:
   docker-compose up -d

3. –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏:
   docker-compose exec app npm run migrate:up

–ü–æ–¥—Ä–æ–±–Ω–µ–µ: —Å–º. DEPLOY_NOW.md

EOF
        ;;
    5)
        log_info "–í—ã—Ö–æ–¥"
        exit 0
        ;;
    *)
        log_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
        exit 1
        ;;
esac

echo ""
log_info "–ì–æ—Ç–æ–≤–æ! üéâ"
