#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ Timeweb Apps
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./check-timeweb-status.sh YOUR_API_TOKEN

set -e

TOKEN="${1:-$TIMEWEB_TOKEN1}"

if [ -z "$TOKEN" ]; then
  echo "‚ùå –û—à–∏–±–∫–∞: –¢–æ–∫–µ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω"
  echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 YOUR_API_TOKEN"
  echo "–ò–ª–∏: export TIMEWEB_TOKEN1=your_token && $0"
  exit 1
fi

APP_ID="125051"

echo "================================================"
echo "üîç –ü–†–û–í–ï–†–ö–ê TIMEWEB APPS"
echo "================================================"
echo ""

# 1. –°—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "üìä 1. –°–¢–ê–¢–£–° –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø"
echo "------------------------------------------------"
STATUS=$(curl -s "https://api.timeweb.cloud/api/v1/apps/$APP_ID" \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json")

echo "$STATUS" | jq '{
  "–°—Ç–∞—Ç—É—Å": .app.status,
  "–í–µ—Ç–∫–∞": .app.branch,
  "–ö–æ–º–º–∏—Ç": .app.commit_sha,
  "–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞": .app.start_time,
  "Framework": .app.framework
}'

echo ""

# 2. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "‚öôÔ∏è  2. –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø"
echo "------------------------------------------------"
ENVS=$(echo "$STATUS" | jq '.app.envs')

if [ "$ENVS" = "{}" ] || [ "$ENVS" = "null" ]; then
  echo "‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ü–£–°–¢–´–ï!"
  echo ""
  echo "–ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å:"
  echo "  - NODE_ENV=production"
  echo "  - PORT=8080"
  echo "  - JWT_SECRET=kamchatour-super-secret-key-2025-production"
  echo "  - NEXTAUTH_URL=https://pospk-kamhub-70c4.twc1.net"
  echo "  - NEXT_PUBLIC_API_URL=https://pospk-kamhub-70c4.twc1.net/api"
  echo "  - SKIP_SENTRY=true"
else
  echo "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã:"
  echo "$ENVS" | jq 'to_entries | .[] | "  \(.key) = \(.value)"' -r
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
  echo ""
  echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö:"
  
  for var in NODE_ENV PORT JWT_SECRET; do
    VALUE=$(echo "$ENVS" | jq -r ".$var")
    if [ "$VALUE" = "null" ] || [ -z "$VALUE" ]; then
      echo "  ‚ùå $var - –û–¢–°–£–¢–°–¢–í–£–ï–¢"
    else
      echo "  ‚úÖ $var = $VALUE"
    fi
  done
fi

echo ""

# 3. Runtime –ª–æ–≥–∏
echo "üìã 3. RUNTIME –õ–û–ì–ò (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫)"
echo "------------------------------------------------"
LOGS=$(curl -s "https://api.timeweb.cloud/api/v1/apps/$APP_ID/logs?type=runtime&limit=20" \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json")

LOG_COUNT=$(echo "$LOGS" | jq '.app_logs | length')

if [ "$LOG_COUNT" = "0" ]; then
  echo "‚ö†Ô∏è  –õ–û–ì–ò –ü–£–°–¢–´–ï - –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–ª–æ—Å—å –∏–ª–∏ –Ω–µ –ª–æ–≥–∏—Ä—É–µ—Ç"
else
  echo "–ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–æ–∫: $LOG_COUNT"
  echo ""
  echo "$LOGS" | jq -r '.app_logs[] | "\(.timestamp) | \(.message)"' | tail -20
fi

echo ""

# 4. Build –ª–æ–≥–∏
echo "üî® 4. BUILD –õ–û–ì–ò (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫)"
echo "------------------------------------------------"
BUILD_LOGS=$(curl -s "https://api.timeweb.cloud/api/v1/apps/$APP_ID/logs?type=build&limit=10" \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json")

BUILD_COUNT=$(echo "$BUILD_LOGS" | jq '.app_logs | length')

if [ "$BUILD_COUNT" = "0" ]; then
  echo "‚ö†Ô∏è  BUILD –õ–û–ì–ò –ü–£–°–¢–´–ï"
else
  echo "–ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–æ–∫: $BUILD_COUNT"
  echo ""
  echo "$BUILD_LOGS" | jq -r '.app_logs[] | "\(.timestamp) | \(.message)"' | tail -10
fi

echo ""

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–∞
echo "üåê 5. –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–û–°–¢–ò"
echo "------------------------------------------------"
HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "https://pospk-kamhub-70c4.twc1.net/api/health" || echo "000")

if [ "$HTTP_CODE" = "200" ]; then
  echo "‚úÖ –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω (HTTP $HTTP_CODE)"
  curl -s "https://pospk-kamhub-70c4.twc1.net/api/health" | jq '.'
elif [ "$HTTP_CODE" = "404" ]; then
  echo "‚ùå –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (HTTP 404)"
  echo "   –ü—Ä–∏—á–∏–Ω–∞: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç"
else
  echo "‚ùå –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (HTTP $HTTP_CODE)"
fi

echo ""
echo "================================================"
echo "‚úÖ –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê"
echo "================================================"
